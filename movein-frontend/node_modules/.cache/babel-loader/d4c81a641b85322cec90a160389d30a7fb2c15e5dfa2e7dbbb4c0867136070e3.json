{"ast":null,"code":"var _jsxFileName = \"D:\\\\MoveIN_test\\\\movein-frontend\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // Check if user has a theme preference in localStorage\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme ? savedTheme === 'dark' : false;\n  });\n\n  // Update localStorage and document class when theme changes\n  useEffect(() => {\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n\n    // Apply invert filter to the root element when in dark mode\n    const rootElement = document.documentElement;\n    const bodyElement = document.body;\n    if (isDarkMode) {\n      // First set the base background color before inversion\n      bodyElement.style.backgroundColor = '#ffffff';\n\n      // Add a small delay to allow the background color to apply first\n      setTimeout(() => {\n        rootElement.classList.add('dark');\n        rootElement.classList.add('theme-inverted');\n      }, 50);\n    } else {\n      rootElement.classList.remove('dark');\n      rootElement.classList.remove('theme-inverted');\n      bodyElement.style.backgroundColor = '';\n    }\n\n    // Fix for elements that need specific adjustments in dark mode\n    const adjustDarkModeSpecifics = () => {\n      const inputs = document.querySelectorAll('input');\n      const buttons = document.querySelectorAll('button');\n      if (isDarkMode) {\n        inputs.forEach(input => {\n          input.style.borderColor = '#4b5563';\n        });\n        buttons.forEach(button => {\n          if (button.classList.contains('bg-primary-600')) {\n            button.style.color = '#ffffff';\n          }\n        });\n      } else {\n        inputs.forEach(input => {\n          input.style.borderColor = '';\n        });\n        buttons.forEach(button => {\n          button.style.color = '';\n        });\n      }\n    };\n    adjustDarkModeSpecifics();\n  }, [isDarkMode]);\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"jTjKCb/NYrXiX8u0EOy0XxTxra4=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default ThemeContext;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","setItem","rootElement","document","documentElement","bodyElement","body","style","backgroundColor","setTimeout","classList","add","remove","adjustDarkModeSpecifics","inputs","querySelectorAll","buttons","forEach","input","borderColor","button","contains","color","toggleTheme","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["D:/MoveIN_test/movein-frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  // Check if user has a theme preference in localStorage\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    return savedTheme ? savedTheme === 'dark' : false;\r\n  });\r\n\r\n  // Update localStorage and document class when theme changes\r\n  useEffect(() => {\r\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\r\n    \r\n    // Apply invert filter to the root element when in dark mode\r\n    const rootElement = document.documentElement;\r\n    const bodyElement = document.body;\r\n    \r\n    if (isDarkMode) {\r\n      // First set the base background color before inversion\r\n      bodyElement.style.backgroundColor = '#ffffff';\r\n      \r\n      // Add a small delay to allow the background color to apply first\r\n      setTimeout(() => {\r\n        rootElement.classList.add('dark');\r\n        rootElement.classList.add('theme-inverted');\r\n      }, 50);\r\n    } else {\r\n      rootElement.classList.remove('dark');\r\n      rootElement.classList.remove('theme-inverted');\r\n      bodyElement.style.backgroundColor = '';\r\n    }\r\n    \r\n    // Fix for elements that need specific adjustments in dark mode\r\n    const adjustDarkModeSpecifics = () => {\r\n      const inputs = document.querySelectorAll('input');\r\n      const buttons = document.querySelectorAll('button');\r\n      \r\n      if (isDarkMode) {\r\n        inputs.forEach(input => {\r\n          input.style.borderColor = '#4b5563';\r\n        });\r\n        \r\n        buttons.forEach(button => {\r\n          if (button.classList.contains('bg-primary-600')) {\r\n            button.style.color = '#ffffff';\r\n          }\r\n        });\r\n      } else {\r\n        inputs.forEach(input => {\r\n          input.style.borderColor = '';\r\n        });\r\n        \r\n        buttons.forEach(button => {\r\n          button.style.color = '';\r\n        });\r\n      }\r\n    };\r\n    \r\n    adjustDarkModeSpecifics();\r\n  }, [isDarkMode]);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkMode(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default ThemeContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}