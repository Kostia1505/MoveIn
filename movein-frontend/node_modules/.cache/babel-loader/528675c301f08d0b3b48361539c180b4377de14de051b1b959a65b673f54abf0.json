{"ast":null,"code":"var _jsxFileName = \"D:\\\\MoveIN\\\\movein-frontend\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // Check if user has a theme preference in localStorage\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const savedTheme = localStorage.getItem('theme');\n    // Default to dark mode as requested\n    return savedTheme ? savedTheme === 'dark' : true;\n  });\n\n  // Update localStorage and document class when theme changes\n  useEffect(() => {\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark-mode');\n    } else {\n      document.documentElement.classList.remove('dark-mode');\n    }\n\n    // Apply CSS variables for theming\n    const root = document.documentElement;\n    if (isDarkMode) {\n      // Dark mode colors from the image\n      root.style.setProperty('--bg-primary', '#171E26');\n      root.style.setProperty('--bg-secondary', '#1E2631');\n      root.style.setProperty('--bg-tertiary', '#252E3A');\n      root.style.setProperty('--text-primary', '#FFFFFF');\n      root.style.setProperty('--text-secondary', '#B0B7C3');\n      root.style.setProperty('--text-muted', '#6B7280');\n      root.style.setProperty('--border', '#2D3748');\n      root.style.setProperty('--card-bg', 'rgba(30, 38, 49, 0.95)');\n      root.style.setProperty('--input-bg', '#252E3A');\n      document.body.style.backgroundColor = '#171E26';\n    } else {\n      // Light mode colors\n      root.style.setProperty('--bg-primary', '#ffffff');\n      root.style.setProperty('--bg-secondary', '#f9fafb');\n      root.style.setProperty('--bg-tertiary', '#f3f4f6');\n      root.style.setProperty('--text-primary', '#111827');\n      root.style.setProperty('--text-secondary', '#4b5563');\n      root.style.setProperty('--text-muted', '#6b7280');\n      root.style.setProperty('--border', '#e5e7eb');\n      root.style.setProperty('--card-bg', '#ffffff');\n      root.style.setProperty('--input-bg', '#f9fafb');\n      document.body.style.backgroundColor = '#ffffff';\n    }\n\n    // Accent colors remain consistent in both themes\n    root.style.setProperty('--accent', '#3B82F6');\n    root.style.setProperty('--accent-hover', '#2563EB');\n  }, [isDarkMode]);\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"M9b2Pm/ioJGAdAUsjzZAMHwxk+4=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default ThemeContext;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","setItem","document","documentElement","classList","add","remove","root","style","setProperty","body","backgroundColor","toggleTheme","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["D:/MoveIN/movein-frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  // Check if user has a theme preference in localStorage\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    // Default to dark mode as requested\r\n    return savedTheme ? savedTheme === 'dark' : true;\r\n  });\r\n\r\n  // Update localStorage and document class when theme changes\r\n  useEffect(() => {\r\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\r\n    \r\n    if (isDarkMode) {\r\n      document.documentElement.classList.add('dark-mode');\r\n    } else {\r\n      document.documentElement.classList.remove('dark-mode');\r\n    }\r\n    \r\n    // Apply CSS variables for theming\r\n    const root = document.documentElement;\r\n    \r\n    if (isDarkMode) {\r\n      // Dark mode colors from the image\r\n      root.style.setProperty('--bg-primary', '#171E26');\r\n      root.style.setProperty('--bg-secondary', '#1E2631');\r\n      root.style.setProperty('--bg-tertiary', '#252E3A');\r\n      root.style.setProperty('--text-primary', '#FFFFFF');\r\n      root.style.setProperty('--text-secondary', '#B0B7C3');\r\n      root.style.setProperty('--text-muted', '#6B7280');\r\n      root.style.setProperty('--border', '#2D3748');\r\n      root.style.setProperty('--card-bg', 'rgba(30, 38, 49, 0.95)');\r\n      root.style.setProperty('--input-bg', '#252E3A');\r\n      document.body.style.backgroundColor = '#171E26';\r\n    } else {\r\n      // Light mode colors\r\n      root.style.setProperty('--bg-primary', '#ffffff');\r\n      root.style.setProperty('--bg-secondary', '#f9fafb');\r\n      root.style.setProperty('--bg-tertiary', '#f3f4f6');\r\n      root.style.setProperty('--text-primary', '#111827');\r\n      root.style.setProperty('--text-secondary', '#4b5563');\r\n      root.style.setProperty('--text-muted', '#6b7280');\r\n      root.style.setProperty('--border', '#e5e7eb');\r\n      root.style.setProperty('--card-bg', '#ffffff');\r\n      root.style.setProperty('--input-bg', '#f9fafb');\r\n      document.body.style.backgroundColor = '#ffffff';\r\n    }\r\n    \r\n    // Accent colors remain consistent in both themes\r\n    root.style.setProperty('--accent', '#3B82F6');\r\n    root.style.setProperty('--accent-hover', '#2563EB');\r\n    \r\n  }, [isDarkMode]);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkMode(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default ThemeContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}