{"ast":null,"code":"var _jsxFileName = \"D:\\\\MoveIN_test\\\\movein-frontend\\\\src\\\\contexts\\\\LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Translation objects\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translations = {\n  en: {\n    login: 'Login',\n    signup: 'Sign Up',\n    email: 'Email address',\n    password: 'Password',\n    confirmPassword: 'Confirm Password',\n    firstName: 'First name',\n    lastName: 'Last name',\n    or: 'Or',\n    createAccount: 'Create an account',\n    passwordsDontMatch: 'Passwords do not match',\n    creatingAccount: 'Creating account...',\n    failedToLogin: 'Failed to login. Please try again.',\n    loggingIn: 'Logging in...',\n    welcomeBack: 'Welcome back! Please enter your details.',\n    enterInformation: 'Enter your information to create your account',\n    rememberMe: 'Remember me',\n    forgotPassword: 'Forgot password?',\n    alreadyHaveAccount: 'Already have an account?',\n    dontHaveAccount: 'Don\\'t have an account?'\n  }\n  // Add more languages here as needed\n};\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s();\n  const [language, setLanguage] = useState('en');\n  const t = key => {\n    return translations[language][key] || key;\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      setLanguage,\n      t\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageProvider, \"fVUtOCD1O58HgvMjnE8lxRQa0QA=\");\n_c = LanguageProvider;\nexport const useLanguage = () => {\n  _s2();\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n_s2(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default LanguageContext;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","translations","en","login","signup","email","password","confirmPassword","firstName","lastName","or","createAccount","passwordsDontMatch","creatingAccount","failedToLogin","loggingIn","welcomeBack","enterInformation","rememberMe","forgotPassword","alreadyHaveAccount","dontHaveAccount","LanguageContext","LanguageProvider","children","_s","language","setLanguage","t","key","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLanguage","_s2","context","Error","$RefreshReg$"],"sources":["D:/MoveIN_test/movein-frontend/src/contexts/LanguageContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\n// Translation objects\r\nconst translations = {\r\n  en: {\r\n    login: 'Login',\r\n    signup: 'Sign Up',\r\n    email: 'Email address',\r\n    password: 'Password',\r\n    confirmPassword: 'Confirm Password',\r\n    firstName: 'First name',\r\n    lastName: 'Last name',\r\n    or: 'Or',\r\n    createAccount: 'Create an account',\r\n    passwordsDontMatch: 'Passwords do not match',\r\n    creatingAccount: 'Creating account...',\r\n    failedToLogin: 'Failed to login. Please try again.',\r\n    loggingIn: 'Logging in...',\r\n    welcomeBack: 'Welcome back! Please enter your details.',\r\n    enterInformation: 'Enter your information to create your account',\r\n    rememberMe: 'Remember me',\r\n    forgotPassword: 'Forgot password?',\r\n    alreadyHaveAccount: 'Already have an account?',\r\n    dontHaveAccount: 'Don\\'t have an account?'\r\n  },\r\n  // Add more languages here as needed\r\n};\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState('en');\r\n\r\n  const t = (key) => {\r\n    return translations[language][key] || key;\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, setLanguage, t }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLanguage = () => {\r\n  const context = useContext(LanguageContext);\r\n  if (!context) {\r\n    throw new Error('useLanguage must be used within a LanguageProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default LanguageContext; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG;EACnBC,EAAE,EAAE;IACFC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,SAAS;IACjBC,KAAK,EAAE,eAAe;IACtBC,QAAQ,EAAE,UAAU;IACpBC,eAAe,EAAE,kBAAkB;IACnCC,SAAS,EAAE,YAAY;IACvBC,QAAQ,EAAE,WAAW;IACrBC,EAAE,EAAE,IAAI;IACRC,aAAa,EAAE,mBAAmB;IAClCC,kBAAkB,EAAE,wBAAwB;IAC5CC,eAAe,EAAE,qBAAqB;IACtCC,aAAa,EAAE,oCAAoC;IACnDC,SAAS,EAAE,eAAe;IAC1BC,WAAW,EAAE,0CAA0C;IACvDC,gBAAgB,EAAE,+CAA+C;IACjEC,UAAU,EAAE,aAAa;IACzBC,cAAc,EAAE,kBAAkB;IAClCC,kBAAkB,EAAE,0BAA0B;IAC9CC,eAAe,EAAE;EACnB;EACA;AACF,CAAC;AAED,MAAMC,eAAe,gBAAG1B,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAM2B,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAM+B,CAAC,GAAIC,GAAG,IAAK;IACjB,OAAO5B,YAAY,CAACyB,QAAQ,CAAC,CAACG,GAAG,CAAC,IAAIA,GAAG;EAC3C,CAAC;EAED,oBACE7B,OAAA,CAACsB,eAAe,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,QAAQ;MAAEC,WAAW;MAAEC;IAAE,CAAE;IAAAJ,QAAA,EAC3DA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACV,EAAA,CAZWF,gBAAgB;AAAAa,EAAA,GAAhBb,gBAAgB;AAc7B,OAAO,MAAMc,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,MAAMC,OAAO,GAAGzC,UAAU,CAACwB,eAAe,CAAC;EAC3C,IAAI,CAACiB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,WAAW;AAQxB,eAAef,eAAe;AAAC,IAAAc,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}